"""
С детства Максим был неплохим музыкантом и мастером на все руки. Недавно он самостоятельно
сделал несложный перкуссионный музыкальный инструмент — треугольник. Ему нужно узнать,
какова частота звука, издаваемого его инструментом.
У Максима есть профессиональный музыкальный тюнер, с помощью которого можно проигрывать
ноту с заданной частотой. Максим действует следующим образом: он включает на тюнере
ноты с разными частотами и для каждой ноты на слух определяет, ближе или дальше
она к издаваемому треугольником звуку, чем предыдущая нота. Поскольку слух у Максима
абсолютный, он определяет это всегда абсолютно верно.
Вам Максим показал запись, в которой приведена последовательность частот, выставляемых
им на тюнере, и про каждую ноту, начиная со второй, записано — ближе или дальше
она к звуку треугольника, чем предыдущая нота. Заранее известно, что частота звучания
треугольника Максима составляет не менее 30 герц и не более 4000 герц.
Требуется написать программу, которая определяет, в каком интервале может находиться
частота звучания треугольника.

Формат ввода
Первая строка входного файла содержит целое число n — количество нот, которые воспроизводил
Максим с помощью тюнера (2 ≤ n ≤ 1000). Последующие n строк содержат записи Максима,
причём каждая строка содержит две компоненты: вещественное число f_i — частоту, выставленную
на тюнере, в герцах (30 ≤ f_i ≤ 4000), и слово «closer» или слово «further» для каждой
частоты, кроме первой.
Слово «closer» означает, что частота данной ноты ближе к частоте звучания треугольника,
чем частота предыдущей ноты, что формально описывается соотношением: |f_i − f_triangle|
< |f_i−1 − f_triangle| .
Слово «further» означает, что частота данной ноты дальше, чем предыдущая.
Если оказалось, что очередная нота так же близка к звуку треугольника, как и предыдущая
нота, то Максим мог записать любое из двух указанных выше слов.
Гарантируется, что результаты, полученные Максимом, непротиворечивы.

Формат вывода
В выходной файл необходимо вывести через пробел два вещественных числа — наименьшее
и наибольшее возможное значение частоты звучания треугольника, изготовленного Максимом.
Числа должны быть выведены с точностью не хуже 10−6.

Пример 1
Ввод
Вывод
3
440
220 closer
300 further

30.0 260.0

Пример 2
Ввод
Вывод
4
554
880 further
440 closer
622 closer

531.0 660.0
"""

MIN, MAX = 30, 4000


def area(a, b, kind):
    """
    (a, b)
    kind = 'closer' or 'further'
    """
    mid = (a + b) / 2
    kind = kind == "closer"

    if a > b:
        a, b = b, a
        kind = not kind

    if kind:
        return (mid, MAX)
    else:
        return (MIN, mid)


def intersection(int1, int2):
    left = max(int1[0], int2[0])
    right = min(int1[1], int2[1])

    # if right < left:
    #     raise TypeError
    #     # return (right, left)

    return (left, right)


def fun(s):
    """
    >>> fun(['440', '220 closer', '300 further'])
    (30.0, 260.0)
    >>> fun(['554', '880 further', '440 closer', '622 closer'])
    (531.0, 660.0)
    >>> fun(['100', '200 closer', '100 closer'])
    (150.0, 150.0)
    >>> fun(['100', '200 further', '622 further', '622 further'])
    (30.0, 150.0)
    """
    from decimal import MAX_PREC, Decimal, getcontext

    getcontext().prec = MAX_PREC

    ans = (MIN, MAX)

    a = s[0]
    # a = float(a)
    a = Decimal(a)
    for i in range(1, len(s)):

        b, kind = s[i].split()
        # b = float(b)
        b = Decimal(b)

        if abs(a - b) < 10 ** (-6):  # !!!!!!!
            continue

        x = area(a, b, kind)
        ans = intersection(ans, x)

        a = b

    ans = tuple(map(float, ans))
    return ans


n = int(input())
s = [input() for _ in range(n)]
print(*fun(s))


if __name__ == "__main__":
    import doctest

    doctest.testmod()
