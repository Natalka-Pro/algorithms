"""
Широко известна следующая задача для младших школьников. Три черепахи ползут по
дороге. Одна черепаха говорит: “Впереди меня две черепахи”. Другая черепаха говорит:
“Позади меня две черепахи”. Третья черепаха говорит: “Впереди меня две черепахи
и позади меня две черепахи”. Как такое может быть? Ответ: третья черепаха врет!
По дороге одна за другой движутся N черепах. Каждая черепаха говорит фразу вида:
“Впереди меня ai черепах, а позади меня bi черепах”. Ваша задача определить, сколько
самое большее количество черепах могут говорить правду.

Формат ввода
В первой строке вводится целое число N (1 ≤ N ≤ 10000) строк, содержащих целые числа
ai и bi, по модулю не превосходящие 10000, описывающие высказывание i-ой черепахи.

Формат вывода
Выведите целое число M – максимальное количество черепах, которые могут говорить
правду.

Пример 1
Ввод
Вывод
3
2 0
0 2
2 2

2

Пример 2
Ввод
Вывод
5
0 4
1 3
2 2
3 1
4 0

5

Пример 3
Ввод
Вывод
10
9 1
8 1
7 2
6 2
5 3
4 4
3 6
2 7
1 9
0 8

4
"""


def fun(s, N):
    """
    >>> fun([(2, 0), (0, 2), (2, 2)], 3)
    2
    >>> fun([(0, 4), (1, 3), (2, 2), (3, 1), (4, 0)], 5)
    5
    >>> fun([(9, 1), (8, 1), (7, 2), (6, 2), (5, 3), (4, 4), (3, 6), (2, 7), (1, 9), (0, 8)], 10)
    4
    """

    s = set(s)
    count = 0

    for a, b in s:
        sum = a + b
        if a >= 0 and b >= 0 and sum == N - 1:
            count += 1

    return count


def fun2(s, N):
    """
    >>> fun2([(2, 0), (0, 2), (2, 2)], 3)
    2
    >>> fun2([(0, 4), (1, 3), (2, 2), (3, 1), (4, 0)], 5)
    5
    >>> fun2([(9, 1), (8, 1), (7, 2), (6, 2), (5, 3), (4, 4), (3, 6), (2, 7), (1, 9), (0, 8)], 10)
    4
    """

    used = set()

    for a, b in s:
        if a >= 0 and b >= 0 and a + b == N - 1 and a not in used:
            used.add(a)

    return len(used)


N = int(input())
s = [tuple(map(int, input().split())) for _ in range(N)]
print(fun(s, N))

# print(f">>> fun({s})")
# print(f"{fun(s)}")


if __name__ == "__main__":
    import doctest

    doctest.testmod()
